;;; Originally sourced from https://github.com/rbkmoney/email_validator/blob/master/src/email_validator_abnf.abnf
;;;
;;; Based on RFC5321 (Simple Mail Transfer Protocol)
;;; https://tools.ietf.org/rfc/rfc5321.txt
;;; + Added support for RFC6532 via RFC6531 (SMTP Extension for Internationalized Email)
;;;   https://tools.ietf.org/rfc/rfc6532.txt
;;;   https://tools.ietf.org/rfc/rfc6531.txt

mailbox         =   local-part "@" domain
domain          =   domain-name / address-literal
domain-name     =   sub-domain *("." sub-domain)
sub-domain      =   let-dig [ldh-str] / U-Label
U-Label         =   1*UTF8-non-ascii

let-dig         =   ALPHA / DIGIT
hyphen-let-dig  =   *("-") let-dig
ldh-str         =   1*(hyphen-let-dig / let-dig)
address-literal =   "[" IPv4address "]" / "[" IPv6-address-literal "]"

; ; ; Local part

local-part      =   dot-string / quoted-string
dot-string      =   atom *("."  atom)
quoted-string   =   DQUOTE *qcontentSMTP DQUOTE
qcontentSMTP    =   qtextSMTP / quoted-pairSMTP
quoted-pairSMTP =   %d92 %d32-126   ; i.e., backslash followed by any ASCII
                                    ; graphic (including itself) or SPace
qtextSMTP       =   %d32-33 /       ; i.e., within a quoted string, any
                    %d35-91 /       ; ASCII graphic or space is permitted
                    %d93-126 /      ; without blackslash-quoting except
                    UTF8-non-ascii  ; double-quote and the backslash itself.

; ; ; Atom

atext           =   ALPHA / DIGIT / ; Printable US-ASCII
                    "!" / "#" /     ; characters not including
                    "$" / "%" /     ; specials. Used for atoms.
                    "&" / "'" /
                    "*" / "+" /
                    "-" / "/" /
                    "=" / "?" /
                    "^" / "_" /
                    "`" / "{" /
                    "|" / "}" /
                    "~" / UTF8-non-ascii
atom            =   1*atext

; ; ; Internationalized Email Headers

UTF8-non-ascii  =   UTF8-2 / UTF8-3 / UTF8-4

; ; ; UTF-8 Byte Sequences (https://tools.ietf.org/rfc/rfc3629.txt)

UTF8-2          =   %xC2-DF UTF8-tail

UTF8-3          =   %xE0 %xA0-BF UTF8-tail / %xE1-EC 2( UTF8-tail ) /
                    %xED %x80-9F UTF8-tail / %xEE-EF 2( UTF8-tail )

UTF8-4          =   %xF0 %x90-BF 2( UTF8-tail ) / %xF1-F3 3( UTF8-tail ) /
                    %xF4 %x80-8F 2( UTF8-tail )

UTF8-tail       =   %x80-BF

; ; ; Based on RFC3986, fixed for lack of backtracking.

IPv6-address-literal = "IPv6:" IPv6address

IPv6address     =                            6( h16 ":" ) ls32
                /                       "::" 5( h16 ":" ) ls32
                / [ h16               ] "::" 4( h16 ":" ) ls32
                / [ h16 *1( ":" h16 ) ] "::" 3( h16 ":" ) ls32
                / [ h16 *2( ":" h16 ) ] "::" 2( h16 ":" ) ls32
                / [ h16 *3( ":" h16 ) ] "::"    h16 ":"   ls32
                / [ h16 *4( ":" h16 ) ] "::"              ls32
                / [ h16 *5( ":" h16 ) ] "::"              h16
                / [ h16 *6( ":" h16 ) ] "::"

h16             = 1*4HEXDIG
ls32            = ( h16 ":" h16 ) / IPv4address
IPv4address     = dec-octet "." dec-octet "." dec-octet "." dec-octet
dec-octet       = "25" %x30-35       ; 250-255
                / "2" %x30-34 DIGIT  ; 200-249
                / "1" 2DIGIT         ; 100-199
                / %x31-39 DIGIT      ; 10-99
                / DIGIT              ; 0-9
